{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","hooks/use-http.js","lib/api.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","components/pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","components/pages/NewQuotes.js","components/quotes/HighlightedQuote.js","components/pages/QuoteDetail.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/pages/NotFound.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","navigate","useNavigate","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","console","log","pathname","list","map","quote","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","LoadingSpinner","spinner","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","Card","card","children","QuoteForm","authorInputRef","useRef","textInputRef","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuotes","HighlightedQuote","QuoteDetail","useParams","path","element","NewCommentForm","commentTextRef","onAddedComments","submitFormHandler","CommentItem","CommentsList","comments","comment","Comments","useState","isAddingComment","setIsAddingComment","loadedComments","addedCommentHandler","MainNavigation","header","logo","nav","isActive","active","Layout","main","NotFound","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a417402a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1f9RR\",\"loading\":\"QuoteForm_loading__1FSlB\",\"control\":\"QuoteForm_control__3E0vc\",\"actions\":\"QuoteForm_actions__j3U1U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3XkBi\",\"logo\":\"MainNavigation_logo__Ik_SP\",\"nav\":\"MainNavigation_nav__1FpF-\",\"active\":\"MainNavigation_active__3rjZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__bi2Ec\",\"loading\":\"NewCommentForm_loading__3VjsF\",\"control\":\"NewCommentForm_control__g6pDq\",\"actions\":\"NewCommentForm_actions__3Sufj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__1JSMO\",\"sorting\":\"QuoteList_sorting__Xkcnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2lpZI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__1Gwfd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__QT8QJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3PzXt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1l3wn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__18J92\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__173dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__3jcsQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1GJ5y\"};","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  \n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending)\n\n  const changeSortingHandler = () => {\n    console.log(location);\n    navigate(`${location.pathname}?sort=${(isSortingAscending ? \"desc\" : \"asc\")} `);\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          {\" \"}\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://react-router-test-8c6f0-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import classes from './NoQuotesFound.module.css';\nimport {Link} from 'react-router-dom'\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to = '/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import QuoteList from \"../quotes/QuoteList\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport { getAllQuotes } from \"../../lib/api\";\r\nimport { useEffect } from \"react\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../quotes/NoQuotesFound\";\r\n\r\nexport const DUMMY_QUOTES = [\r\n  {\r\n    id: \"q1\",\r\n    author: \"Ubon\",\r\n    text: \"learning react router\",\r\n  },\r\n  {\r\n    id: \"q2\",\r\n    author: \"Abasi\",\r\n    text: \"becoming a pharmacist\",\r\n  },\r\n  {\r\n    id: \"q3\",\r\n    author: \"Nami\",\r\n    text: \"an architect in the making\",\r\n  },\r\n];\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focus\">{error}</p>;\r\n  }\r\n\r\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n  return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef } from 'react';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from \"../quotes/QuoteForm\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport { addQuote } from \"../../lib/api\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst NewQuotes = () => {\r\n  const navigate = useNavigate();\r\n  const {sendRequest, status} = useHttp(addQuote);\r\n  useEffect(()=>\r\n  {\r\n      if(status === 'completed')\r\n      {\r\n        navigate('/quotes')\r\n      }\r\n\r\n  },[status, navigate])\r\n  const addAddQuoteHandler = (quoteData) => {\r\n      sendRequest(quoteData)\r\n    console.log(quoteData);\r\n    navigate(\"/quotes\");\r\n  };\r\n\r\n  return <QuoteForm onAddQuote={addAddQuoteHandler} isLoading = {status === 'pending'} />;\r\n};\r\n\r\nexport default NewQuotes;\r\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useParams, Outlet, Link, Routes, Route } from \"react-router-dom\";\r\nimport { Fragment, useEffect } from \"react\";\r\nimport { DUMMY_QUOTES } from \"./AllQuotes\";\r\nimport HighlightedQuote from \"../quotes/HighlightedQuote\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport { getSingleQuote } from \"../../lib/api\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\n\r\nconst QuoteDetail = () => {\r\n  let { quoteId } = useParams();\r\n\r\n  // let quoteText, quoteAuthor;\r\n  // quoteText = \"No quotes found\";\r\n  // quoteAuthor = \" \";\r\n  // DUMMY_QUOTES.forEach((el) => {\r\n  //   if (quoteId === el.id) {\r\n  //     quoteText = el.text;\r\n  //     quoteAuthor = el.author;\r\n  //   }\r\n    //  else {\r\n    //   quoteText = \"No quotes found\";\r\n    //   quoteAuthor = \" \";\r\n    // }\r\n  // });\r\n\r\n  // const quote = DUMMY_QUOTES.find((quote) => quote.id === quoteId);\r\n\r\n\r\n  const {sendRequest, status, data:loadedQuote, error} =  useHttp(getSingleQuote, true)\r\n\r\n  useEffect(()=>{\r\n    sendRequest(quoteId)\r\n  },[sendRequest, quoteId])\r\n\r\n  if(status=== 'pending')\r\n  {\r\n    return <div className=\"centered\"><LoadingSpinner/></div>\r\n  }\r\n  if(error)\r\n  {\r\n    return <p className=\"centered\">{error}</p>\r\n  }\r\n  if(!loadedQuote.text)\r\n  {\r\n    return <p>No Quote Found</p>\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <HighlightedQuote text = {quote.text} author = {quote.author}/> */}\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Routes>\r\n        <Route\r\n          path={'/'}\r\n          element={\r\n            <div className=\"centered\">\r\n              <Link to={\"comments\"} className=\"btn--flat\">\r\n                Load Comments\r\n              </Link>\r\n            </div>\r\n          }\r\n        />\r\n      </Routes>\r\n\r\n      <Outlet />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n","import { useRef, useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport classes from \"./NewCommentForm.module.css\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n  \n\n  const {onAddedComments} = props\n  useEffect(()=>{\n    if(status === 'completed' && !error)\n    {\n      onAddedComments()\n    }\n  }, [status, error, onAddedComments])\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest({ commentData :{ text: enteredText} , quoteId: props.quoteId});\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect ,useCallback} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from './CommentsList'\n\nconst Comments = () => {\n  let comments;\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const { quoteId } = useParams();\n\n  const { sendRequest, data: loadedComments, status } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId)\n  },[sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if(status === 'completed' && (loadedComments && loadedComments.length>0))\n  {\n    comments = <CommentsList comments = {loadedComments}/>\n  }\n\n  if(status === 'completed' && (!loadedComments || loadedComments.length === 0))\n  {\n    comments = <p className=\"centered\">No Comments Were Added Yet</p>\n\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComments={addedCommentHandler}\n        />\n      )}\n      <div>{comments}</div>\n    </section>\n  );\n};\n\nexport default Comments;\n","import { NavLink } from \"react-router-dom\";\r\nimport classes from \"./MainNavigation.module.css\";\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}> Great Quotes</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink\r\n              to=\"/quotes\"\r\n              className={({isActive}) => (isActive ? classes.active : \"\")}\r\n            >All Quotes</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"/new-quote\"\r\n              className={({isActive}) => (isActive ? classes.active : \"\")}\r\n            >New Quote</NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import classes from './Layout.module.css'\r\nimport { Fragment } from 'react'\r\nimport MainNavigation from './MainNavigation'\r\n\r\nconst Layout = (props)=>{\r\nreturn (\r\n    <Fragment>\r\n        <MainNavigation/>\r\n        <main className={classes.main}>{props.children}</main>\r\n    </Fragment>\r\n)\r\n}\r\n\r\nexport default Layout","const NotFound = ()=>\r\n{\r\n    return <p>Error 404! Resource Not Found</p>\r\n}\r\nexport default NotFound","import { Routes, Route, Navigate } from \"react-router-dom\";\nimport AllQuotes from \"./components/pages/AllQuotes\";\nimport NewQuotes from \"./components/pages/NewQuotes\";\nimport QuoteDetail from \"./components/pages/QuoteDetail\";\nimport Comments from \"./components/comments/Comments\";\nimport Layout from \"./components/layout/Layout\";\nimport NotFound from \"./components/pages/NotFound\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Routes>\n        <Route path=\"/\" element={<Navigate to=\"/quotes\"/>} />\n        <Route path=\"/quotes\" element={<AllQuotes />}  />\n        <Route path=\"/quotes/:quoteId/*\" element={<QuoteDetail />} >\n          <Route path=\"comments\"  element = {<Comments/>}/>\n        </Route>\n        <Route path=\"/new-quote\" element={<NewQuotes />} />\n        <Route path='*' element = {<NotFound/>}/>\n      </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    \n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}